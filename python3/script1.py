#!/usr/bin/env python3

DNA = 'GATGGGATTGGGGTTTTCCCCTCCCATGTGCTCAAGACTGGCGCTAAAAGTTTTGAGCTTCTCAAAAGTCTAGAGCCACCGTCCAGGGAGCAGGTAGCTGCTGGGCTCCGGGGACACTTTGCGTTCGGGCTGGGAGCGTGCTTTCCACGACGGTGACACGCTTCCCTGGATTGGCAGCCAGACTGCCTTCCGGGTCACTGCCATGGAGGAGCCGCAGTCAGATCCTAGCGTCGAGCCCCCTCTGAGTCAGGAAACATTTTCAGACCTATGGAAACTACTTCCTGAAAACAACGTTCTGTCCCCCTTGCCGTCCCAAGCAATGGATGATTTGATGCTGTCCCCGGACGATATTGAACAATGGTTCACTGAAGACCCAGGTCCAGATGAAGCTCCCAGAATTCGCCAGAGGCTGCTCCCCCCGTGGCCCCTGCACCAGCAGCTCCTACACCGGCGGCCCCTGCACCAGCCCCCTCCTGGCCCCTGTCATCTTCTGTCCCTTCCCAGAAAACCTACCAGGGCAGCTACGGTTTCCGTCTGGGCTTCTTGCATTCTGGGACAGCCAAGTCTGTGACTTGCACGTACTCCCCTGCCCTCAACAAGATGTTTTGCCAACTGGCCAAGACCTGCCCTGTGCAGCTGTGGGTTGATTCCACACCCCCGCCCGGCACCCGCGTCCGCGCCATGGCCATCTACAAGCAGTCACAGCACATGACGGAGGTTGTGAGGCGCTGCCCCCACCATGAGCGCTGCTCAGATAGCGATGGTCTGGCCCCTCCTCAGCATCTTATCCGAGTGGAAGGAAATTTGCGTGTGGAGTATTTGGATGACAGAAACACTTTTCG'

print('DNA lenght is', len(DNA))

print('I have', DNA.count('A'), 'A')

print('I have', DNA.count('T'), 'T')

print('I have', DNA.count('G'), 'G')

print('I have', DNA.count('C'), 'C')

bird = 'chicken'

print(bird.upper())

dna = 'GATGGGATTggggttttccccTCCCATGTGCTCAAGACTGGCGCTaaaaGttttGAGCTTCTCaaaaGTCTAGAGCCACCGTCCAGGGAGCAGGTAGCTGCTGGGCTCCggggACACTTTGCGTTCGGGCTGGGAGCGTGCTTTCCACGACGGTGACACGCTTCCCTGGATTGGCAGCCAGACTGCCTTCCGGGTCACTGCCATGGAGGAGCCGCAGTCAGATCCTAGCGTCGAGccccCTCTGAGTCAGGAAACAttttCAGACCTATGGAAACTACTTCCTGaaaaCAACGTTCTGTccccCTTGCCGTCCCAAGCAATGGATGATTTGATGCTGTccccGGACGATATTGAACAATGGTTCACTGAAGACCCAGGTCCAGATGAAGCTCCCAGAATTCGCCAGAGGCTGCTccccCCGTGGccccTGCACCAGCAGCTCCTACACCGGCGGccccTGCACCAGccccCTCCTGGccccTGTCATCTTCTGTCCCTTCCCAGaaaaCCTACCAGGGCAGCTACGGTTTCCGTCTGGGCTTCTTGCATTCTGGGACAGCCAAGTCTGTGACTTGCACGTACTccccTGCCCTCAACAAGATGttttGCCAACTGGCCAAGACCTGCCCTGTGCAGCTGTGGGTTGATTCCACAccccCGCCCGGCACCCGCGTCCGCGCCATGGCCATCTACAAGCAGTCACAGCACATGACGGAGGTTGTGAGGCGCTGccccCACCATGAGCGCTGCTCAGATAGCGATGGTCTGGccccTCCTCAGCATCTTATCCGAGTGGAAGGAAATTTGCGTGTGGAGTATTTGGATGACAGAAACACttttCG'

dna_upper = dna.upper()

print('I have', dna_upper.count('A'), 'A')

print('I have', dna_upper.count('T'), 'T')

print('I have', dna_upper.count('G'), 'G')

print('I have', dna_upper.count('C'), 'C')

# I can also do it this way without changing to capital letters:

print('I have', dna.count('A') + dna.count('a'), 'A')

print('I have', dna.count('T') + dna.count('t'), 'T')


# nested replace

rna = (dna.replace('T','U')).replace('t', 'U')

print('I have', rna.count('U'), 'U in rna')


# test
test_dna = 'AATTGGCCA'

print(test_dna.count('A')+test_dna.count('T'), "it's my AT content in test_dna")

print(test_dna.count('A'),"it's my A content in test_dna and", test_dna.count('T'), "it's my T content in test_dna")

# AT content 


AT_DNA_count = DNA.count('A')+DNA.count('T')

#print(DNA.count('A'),"it's my A content in test_dna and", DNA.count('T'), "it's my T content in test_dna")

AT_content= ((AT_DNA_count/ len(DNA)) * 100)

print('{:.2f}'.format(AT_content), "it's my AT content in DNA")


# CG content

GC_DNA_count = DNA.count('G')+DNA.count('C')

GC_content= ((GC_DNA_count/ len(DNA)) * 100)

print('{:.2f}'.format(GC_content), "it's my GC content in DNA")



#substring 


#print(test_dna[3:6])

#sub_DNA = DNA[101:200]



